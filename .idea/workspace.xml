<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="e7bcea6f-a323-4b1f-90c7-5a9552153c37" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/component/homePage/Detail/goods/index.test.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/component/homePage/Detail/goods/index.test.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/component/homePage/Detail/goods/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/component/homePage/Detail/goods/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/component/homePage/Detail/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/component/homePage/Detail/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mockData/product.json" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2JP7sLgasNvFpQo8Ds1b9ccHuhS" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/qianxihe/template/ts-shopping&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.jest.jest_package&quot;: &quot;/Users/qianxihe/template/ts-shopping/node_modules/react-scripts&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/qianxihe/template/ts-shopping/node_modules/typescript/lib&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/component/homePage/Slide/Slider" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.should render detail at the screen">
    <configuration name="should render detail at the screen" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/component/homePage/Detail/index.test.tsx" />
      <test-names>
        <test-name value="should render detail at the screen" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="should render goods at the screen" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/component/homePage/Detail/goods/index.test.tsx" />
      <test-names>
        <test-name value="should render goods at the screen" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="should render goods at the screen.should render description at the screen" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/component/homePage/Detail/goods/index.test.tsx" />
      <test-names>
        <test-name value="should render goods at the screen" />
        <test-name value="should render description at the screen" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="should render goods at the screen.should render name at the screen" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/component/homePage/Detail/goods/index.test.tsx" />
      <test-names>
        <test-name value="should render goods at the screen" />
        <test-name value="should render name at the screen" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="should render goods at the screen.should render price at the screen" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/component/homePage/Detail/goods/index.test.tsx" />
      <test-names>
        <test-name value="should render goods at the screen" />
        <test-name value="should render price at the screen" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.should render detail at the screen" />
        <item itemvalue="Jest.should render goods at the screen" />
        <item itemvalue="Jest.should render goods at the screen.should render price at the screen" />
        <item itemvalue="Jest.should render goods at the screen.should render name at the screen" />
        <item itemvalue="Jest.should render goods at the screen.should render description at the screen" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e7bcea6f-a323-4b1f-90c7-5a9552153c37" name="Changes" comment="" />
      <created>1671968069880</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1671968069880</updated>
      <workItem from="1671968071244" duration="7167000" />
      <workItem from="1672041478487" duration="27283000" />
      <workItem from="1672229264934" duration="5377000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>